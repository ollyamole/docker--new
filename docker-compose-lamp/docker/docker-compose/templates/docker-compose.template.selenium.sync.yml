version: "3.7"

services:
################ Web Stack.
    php-fpm:
        # Pls, check image tags, latest is php-7, but we have php-5 too.
        # build: docker/images/php-fpm/.
        image: akhomy/alpine-php-fpm:${PHP_FPM_TAG}
        # image: akhomy/alpine-php-fpm:php-5
        # image: akhomy/alpine-php-fpm:php-7
        # image: akhomy/alpine-php-fpm:php-7.1
        # image: akhomy/alpine-php-fpm:php-7.0
        container_name: "${PROJECT_NAME}-php-fpm"
        volumes:
            - ./crontasks.txt:/home/crontasks.txt
            - web-docker-sync:${PHP_FPM_ROOT}:nocopy
            # Attaches sample configs if necessary.
            - ${PHP_TEMP_CONFIGS}
        environment:
            USE_ONLY_CONFIGS: ${PHP_USE_ONLY_CONFIGS}
            LINES: ${PHP_LINES}
            COLUMNS: ${PHP_COLUMNS}
            PHP_OPCACHE_ENABLE: ${PHP_OPCACHE_ENABLE}
            DRUSH_VERSION: ${PHP_DRUSH_VERSION}
            PHP_SHOW_ERRORS: ${PHP_SHOW_ERRORS}
            CRONTAB_ENABLED: ${PHP_CRONTAB_ENABLED}
            PHP_FPM_PORT: ${PHP_FPM_PORT}
            PHP_SENDMAIL_PATH: ${PHP_SENDMAIL_PATH}
            PHP_SENDMAIL_HOST: ${PHP_SENDMAIL_HOST}
            PHP_SENDMAIL_PORT: ${PHP_SENDMAIL_PORT}
            PHP_XDEBUG_ENABLED: ${PHP_XDEBUG_ENABLED}
            PHP_XDEBUG_PORT: ${PHP_XDEBUG_PORT}
            PHP_MAX_EXECUTION_TIME: ${PHP_MAX_EXECUTION_TIME}
            PHP_UPLOAD_MAX_FILESIZE: ${PHP_UPLOAD_MAX_FILESIZE}
            PHP_POST_MAX_SIZE: ${PHP_POST_MAX_SIZE}
            PHP_ALLOW_URL_FOPEN: ${PHP_ALLOW_URL_FOPEN}
            PHP_ALWAYS_POPULATE_RAW_POST_DATA: ${PHP_ALWAYS_POPULATE_RAW_POST_DATA}
            PHP_SHORT_OPEN_TAG: ${PHP_SHORT_OPEN_TAG}
            PHP_MEMORY_LIMIT: ${PHP_MEMORY_LIMIT}
        networks:
            0_proxy: {}
            1_internal: {}
            2_shared:
                aliases:
                - ${PHP_FPM_SHARED_NETWORK_ALIAS}

    apache-mpm:
        image: akhomy/alpine-apache:${APACHE_TAG}
        volumes:
            - web-docker-sync:${PHP_FPM_ROOT}:nocopy
            # Attaches sample configs if necessary.
            - ${APACHE_TEMP_CONFIGS}
        labels:
        - "traefik.docker.network=${PROXY_NETWORK}"
        - "traefik.enable=true"
        - "traefik.port=${APACHE_TRAEFIK_PORT}"
        - "traefik.protocol=${APACHE_TRAEFIK_PROTOCOL}"
        - "traefik.frontend.rule=Host:${APACHE_MPM_SHARED_NETWORK_ALIAS}"
        environment:
            USE_ONLY_CONFIGS: ${APACHE_USE_ONLY_CONFIGS}
            APACHE_TIMEOUT: ${APACHE_TIMEOUT}
            DOCUMENT_ROOT: ${APACHE_DOCUMENT_ROOT}
            PROXY_PASS: ${APACHE_PROXY_PASS}
            APACHE_LISTEN_PORT: ${APACHE_LISTEN_PORT}
        networks:
            0_proxy: {}
            1_internal: {}
            2_shared:
                aliases:
                - ${APACHE_MPM_SHARED_NETWORK_ALIAS}

    nginx:
        image: akhomy/alpine-nginx:${NGINX_TAG}
        volumes:
            - web-docker-sync:${PHP_FPM_ROOT}:nocopy
        # Attach sample configs if necessary.
            - ${NGINX_TEMP_CONFIGS}
        labels:
        - "traefik.docker.network=${PROXY_NETWORK}"
        - "traefik.enable=true"
        - "traefik.port=${NGINX_TRAEFIK_PORT}"
        - "traefik.protocol=${NGINX_TRAEFIK_PROTOCOL}"
        - "traefik.frontend.rule=Host:${NGINX_SHARED_NETWORK_ALIAS}"
        environment:
            USE_ONLY_CONFIGS: ${NGINX_USE_ONLY_CONFIGS}
            KEEPALIVE_TIMEOUT: ${NGINX_KEEPALIVE_TIMEOUT}
            FASTCGI_READ_TIMEOUT: ${NGINX_FASTCGI_READ_TIMEOUT}
            LISTEN_PORT: ${NGINX_LISTEN_PORT}
            LISTEN_SSL_PORT: ${NGINX_LISTEN_SSL_PORT}
            SERVER_ROOT: ${NGINX_SERVER_ROOT}
            SERVER_NAME: ${NGINX_SERVER_NAME}
            CLIENT_MAX_BODY_SIZE: ${NGINX_CLIENT_MAX_BODY_SIZE}
            PROXY_CONNECT_TIMEOUT: ${NGINX_PROXY_CONNECT_TIMEOUT}
            PROXY_SEND_TIMEOUT: ${NGINX_PROXY_SEND_TIMEOUT}
            PROXY_READ_TIMEOUT: ${NGINX_PROXY_READ_TIMEOUT}
            SEND_TIMEOUT: ${NGINX_SEND_TIMEOUT}
            FASTCGI_BUFFERS: ${NGINX_FASTCGI_BUFFERS}
            FASTCGI_BUFFER_SIZE: ${NGINX_FASTCGI_BUFFER_SIZE}
            PROXY_BUFFER_SIZE: ${NGINX_PROXY_BUFFER_SIZE}
            PROXY_BUFFERS: ${NGINX_PROXY_BUFFERS}
            PROXY_BUSY_BUFFER_SIZE: ${NGINX_PROXY_BUSY_BUFFER_SIZE}
            OPENSSL_ARGS: ${NGINX_OPENSSL_ARGS}
            PROXY_PASS: ${NGINX_PROXY_PASS}
        networks:
            0_proxy: {}
            1_internal: {}
            2_shared:
                aliases:
                - ${NGINX_SHARED_NETWORK_ALIAS}


################ Database images.
    mysql:
        image: mysql:${MYSQL_TAG}
        # build: docker/images/mysql/.
        volumes:
            - mysql:${MYSQL_LIB_PATH}:cached
            - mysql-docker-sync:${MYSQL_LIB_PATH}:nocopy
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
        networks:
            internal:
                aliases:
                - ${MYSQL_INTERNAL_NETWORK_ALIAS}

################ Selenium image configuration and php-fpm-data as proxy container for selenium.
    php-fpm-data:
        image: akhomy/alpine-php-fpm:${PHP_FPM_DATA_TAG}
        networks:
            internal:
                aliases:
                - ${PHP_FPM_DATA_INTERNAL_NETWORK_ALIAS}

    selenium:
        image: selenium/standalone-firefox-debug:${SELENIUM_TAG}
        labels:
        - "traefik.docker.network=${PROXY_NETWORK}"
        - "traefik.enable=true"
        - "traefik.port=${SELENIUM_TRAEFIK_PORT}"
        - "traefik.protocol=${SELENIUM_TRAEFIK_PROTOCOL}"
        - "traefik.frontend.rule=Host:${SELENIUM_SHARED_NETWORK_ALIAS}"
        ports:
            - "4444"
            - "5900"
        cap_add:
            - NET_ADMIN
            - NET_RAW
        networks:
                0_proxy: {}
                1_internal: {}
                2_shared:
                    aliases:
                    - ${SELENIUM_TAG_SHARED_NETWORK_ALIAS}

networks:
  0_proxy:
    external:
        name: ${PROXY_NETWORK}
  internal:
    driver_opts:
      internal: "true"
    driver: bridge
  2_shared:
    driver: bridge

volumes:
    web-docker-sync:
        name: "web-${PROJECT_NAME}-docker-sync"
        external: true
    mysql-docker-sync:
        name: "mysql-${PROJECT_NAME}-docker-sync"
        external: true
